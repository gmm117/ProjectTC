<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <!-- 기본 콤보박스 스타일 -->
    <Style x:Key="DefaultComboBoxStyle" TargetType="{x:Type ComboBox}">

    </Style>

    <!-- 콤보박스 텍스트 스타일 -->
    <ControlTemplate x:Key="DefaultComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <!-- 콤보박스 텍스트 스타일2 -->
    <ControlTemplate x:Key="DefaultComboBoxTextBox2" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="#ffffff" />
    </ControlTemplate>

    <!-- 콤보박스 드롭다운 버튼 스타일 -->
    <ControlTemplate x:Key="DefaultToggleButton" TargetType="{x:Type ToggleButton}">
        <ControlTemplate.Resources>

            <Color x:Key="NormalFillColor">#f3f3f3</Color>
            <Color x:Key="DisableFillColor">#e4e4e4</Color>
            <Color x:Key="OpenFillColor">#ffffff</Color>

            <Color x:Key="NormalBorderColor">#f3f3f3</Color>
            <Color x:Key="DisableBorderColor">#cfcfcf</Color>
            <Color x:Key="OpenBorderColor">#54adc8</Color>

            <Color x:Key="NormalArrowFillColor">#3a4241</Color>
            <Color x:Key="DisableArrowFillColor">#bcbcbc</Color>
            <Color x:Key="OpenArrowColor">#3a4241</Color>
        </ControlTemplate.Resources>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource NormalFillColor}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="BorderRight">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource NormalFillColor}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="BorderContents">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource NormalFillColor}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Arrow">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource NormalArrowFillColor}"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisableFillColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="BorderRight">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisableFillColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="BorderContents">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisableFillColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Arrow">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisableArrowFillColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <!--<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="Border">-->
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisableBorderColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="BorderRight">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisableBorderColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource OpenFillColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="BorderRight">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource OpenFillColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="BorderContents">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource OpenFillColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource OpenBorderColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="BorderRight">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource OpenBorderColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Arrow">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource OpenArrowColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>


            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="5,0,0,5" BorderThickness="1,1,0,1" Margin="0,0,5,0">
                <Border.BorderBrush>
                    <SolidColorBrush Color="{DynamicResource NormalBorderColor}"/>
                </Border.BorderBrush>
                <Border.Background>
                    <SolidColorBrush Color="{DynamicResource NormalFillColor}"/>
                </Border.Background>
            </Border>
            <Border x:Name="BorderRight" Grid.ColumnSpan="2" CornerRadius="0,5,5,0" BorderThickness="0,1,1,1" HorizontalAlignment="Right" Width="5">
                <Border.BorderBrush>
                    <SolidColorBrush Color="{DynamicResource NormalBorderColor}"/>
                </Border.BorderBrush>
                <Border.Background>
                    <SolidColorBrush Color="{DynamicResource NormalFillColor}"/>
                </Border.Background>
            </Border>

            <Border x:Name="BorderContents" Grid.Column="0" CornerRadius="2,0,0,2" Margin="3,1,1,1">
                <Border.Background>
                    <SolidColorBrush Color="{DynamicResource NormalFillColor}"/>
                </Border.Background>
            </Border>

            <Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" >
                <Path.Fill>
                    <SolidColorBrush Color="{DynamicResource NormalArrowFillColor}"/>
                </Path.Fill>
            </Path>
        </Grid>
    </ControlTemplate>

    <!-- 콤보박스 드롭다운 버튼 스타일2 -->
    <ControlTemplate x:Key="DefaultToggleButton2" TargetType="{x:Type ToggleButton}">
        <ControlTemplate.Resources>

            <Color x:Key="NormalFillColor">#ffffff</Color>
            <Color x:Key="DisableFillColor">#e4e4e4</Color>
            <Color x:Key="OpenFillColor">#ffffff</Color>

            <Color x:Key="NormalBorderColor">#ffffff</Color>
            <Color x:Key="DisableBorderColor">#cfcfcf</Color>
            <Color x:Key="OpenBorderColor">#54adc8</Color>

            <Color x:Key="NormalArrowFillColor">#37b7ec</Color>
            <Color x:Key="DisableArrowFillColor">#bcbcbc</Color>
            <Color x:Key="OpenArrowColor">#37b7ec</Color>
        </ControlTemplate.Resources>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource NormalFillColor}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="BorderRight">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource NormalFillColor}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="BorderContents">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource NormalFillColor}"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Arrow">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource NormalArrowFillColor}"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisableFillColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="BorderRight">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisableFillColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="BorderContents">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisableFillColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Arrow">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisableArrowFillColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <!--<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="Border">-->
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisableBorderColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="BorderRight">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisableBorderColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource OpenFillColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="BorderRight">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource OpenFillColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="BorderContents">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource OpenFillColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource OpenBorderColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="BorderRight">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource OpenBorderColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Arrow">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource OpenArrowColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>


            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="5,0,0,5" BorderThickness="1,1,0,1" Margin="0,0,5,0">
                <Border.BorderBrush>
                    <SolidColorBrush Color="{DynamicResource NormalBorderColor}"/>
                </Border.BorderBrush>
                <Border.Background>
                    <SolidColorBrush Color="{DynamicResource NormalFillColor}"/>
                </Border.Background>
            </Border>
            <Border x:Name="BorderRight" Grid.ColumnSpan="2" CornerRadius="0,5,5,0" BorderThickness="0,1,1,1" HorizontalAlignment="Right" Width="5">
                <Border.BorderBrush>
                    <SolidColorBrush Color="{DynamicResource NormalBorderColor}"/>
                </Border.BorderBrush>
                <Border.Background>
                    <SolidColorBrush Color="{DynamicResource NormalFillColor}"/>
                </Border.Background>
            </Border>

            <Border x:Name="BorderContents" Grid.Column="0" CornerRadius="2,0,0,2" Margin="3,1,1,1">
                <Border.Background>
                    <SolidColorBrush Color="{DynamicResource NormalFillColor}"/>
                </Border.Background>
            </Border>

            <Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" >
                <Path.Fill>
                    <SolidColorBrush Color="{DynamicResource NormalArrowFillColor}"/>
                </Path.Fill>
            </Path>
        </Grid>
    </ControlTemplate>

    <!-- 라운드 콤보박스 드롭다운 버튼 스타일 -->
    <ControlTemplate x:Key="DefaultRoundedToggleButton" TargetType="{x:Type ToggleButton}">
        <ControlTemplate.Resources>
            <Color x:Key="NormalFillColor">#ffffff</Color>
            <Color x:Key="NormalBorderColor">#54adc8</Color>
            <Color x:Key="NormalArrowFillColor">#3a4241</Color>
        </ControlTemplate.Resources>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>

            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="5,0,0,5" BorderThickness="1,1,0,1" Margin="0,0,5,0">
                <Border.BorderBrush>
                    <SolidColorBrush Color="{DynamicResource NormalBorderColor}"/>
                </Border.BorderBrush>
                <Border.Background>
                    <SolidColorBrush Color="{DynamicResource NormalFillColor}"/>
                </Border.Background>
            </Border>
            <Border x:Name="BorderRight" Grid.ColumnSpan="2" CornerRadius="0,5,5,0" BorderThickness="0,1,1,1" HorizontalAlignment="Right" Width="5">
                <Border.BorderBrush>
                    <SolidColorBrush Color="{DynamicResource NormalBorderColor}"/>
                </Border.BorderBrush>
                <Border.Background>
                    <SolidColorBrush Color="{DynamicResource NormalFillColor}"/>
                </Border.Background>
            </Border>

            <Border x:Name="BorderContents" Grid.Column="0" CornerRadius="2,0,0,2" Margin="3,1,1,1">
                <Border.Background>
                    <SolidColorBrush Color="{DynamicResource NormalFillColor}"/>
                </Border.Background>
            </Border>

            <Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" >
                <Path.Fill>
                    <SolidColorBrush Color="{DynamicResource NormalArrowFillColor}"/>
                </Path.Fill>
            </Path>
        </Grid>
    </ControlTemplate>


    <!-- 콤보박스 스타일 -->
    <Style x:Key="DefaultLinedComboBox" TargetType="{x:Type ComboBox}">
        <Style.Resources>
            <Color x:Key="NormalTextColor">#3a4241</Color>
            <Color x:Key="DisableTextColor">#bcbcbc</Color>
            <Color x:Key="OpenTextColor">#3a4241</Color>

            <SolidColorBrush x:Key="OpenFillBrush" Color="#ffffff"/>
            <SolidColorBrush x:Key="OpenBorderBrush" Color="#54adc8"/>
        </Style.Resources>

        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Padding" Value="0"/>

        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="MinHeight" Value="10" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource NormalTextColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisableTextColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_EditableTextBox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentSite">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Uneditable"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ToggleButton x:Name="ToggleButton" Template="{StaticResource DefaultToggleButton}"
                            Grid.Column="2"
                            Focusable="false"
                            ClickMode="Press"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, 
                            RelativeSource={RelativeSource TemplatedParent}}"/>

                        <ContentPresenter x:Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left">
                        </ContentPresenter>

                        <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource DefaultComboBoxTextBox}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="3,3,23,3" Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}" />

                        <Rectangle Name="BottomLine" Fill="#FFE5E5E7" StrokeThickness="0" Height="1" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" />

                        <Popup x:Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True"
                            Focusable="true"
                            PopupAnimation="Slide">
                            <Grid x:Name="DropDown"
                                SnapsToDevicePixels="True"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" BorderThickness="1" BorderBrush="{StaticResource OpenBorderBrush}" Background="{StaticResource OpenFillBrush}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                            <Setter TargetName="DropDownBorder" Property="Background" Value="{StaticResource OpenFillBrush}"/>
                            <Setter TargetName="DropDownBorder" Property="BorderBrush" Value="{StaticResource OpenBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="BottomLine" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 콤보박스 스타일2 -->
    <Style x:Key="DefaultLinedComboBox2" TargetType="{x:Type ComboBox}">
        <Style.Resources>
            <Color x:Key="NormalTextColor">#ff0000</Color>
            <Color x:Key="DisableTextColor">#0000ff</Color>
            <Color x:Key="OpenTextColor">#00ff00</Color>

            <SolidColorBrush x:Key="OpenFillBrush" Color="#ffffff"/>
            <SolidColorBrush x:Key="OpenBorderBrush" Color="#54adc8"/>
        </Style.Resources>

        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="0"/>

        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="MinHeight" Value="10" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource NormalTextColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisableTextColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_EditableTextBox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentSite">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Uneditable"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ToggleButton x:Name="ToggleButton" Template="{StaticResource DefaultToggleButton2}"
                            Grid.Column="2"
                            Focusable="false"
                            ClickMode="Press"
                            Background="White"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, 
                            RelativeSource={RelativeSource TemplatedParent}}"/>

                        <ContentPresenter x:Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left">
                        </ContentPresenter>

                        <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}"  Template="{StaticResource DefaultComboBoxTextBox2}" HorizontalAlignment="Left" VerticalAlignment="Bottom" VerticalContentAlignment="Center" Margin="3,3,23,3" Focusable="True" Background="White" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}" />

                        <Rectangle Name="BottomLine" Fill="#7054adc8" StrokeThickness="0" Height="1" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" />

                        <Popup x:Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True"
                            Focusable="true"
                            PopupAnimation="Slide">
                            <Grid x:Name="DropDown"
                                SnapsToDevicePixels="True"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" BorderThickness="1" BorderBrush="{StaticResource OpenBorderBrush}" Background="{StaticResource OpenFillBrush}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                            <Setter TargetName="DropDownBorder" Property="Background" Value="{StaticResource OpenFillBrush}"/>
                            <Setter TargetName="DropDownBorder" Property="BorderBrush" Value="{StaticResource OpenBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="BottomLine" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- 기본 라운드 콤보 스타일 -->
    <Style x:Key="DefaultRoundedComboBox" TargetType="{x:Type ComboBox}">
        <Style.Resources>
            <Color x:Key="NormalTextColor">#3a4241</Color>
            <Color x:Key="DisableTextColor">#bcbcbc</Color>
            <Color x:Key="OpenTextColor">#3a4241</Color>

            <SolidColorBrush x:Key="OpenFillBrush" Color="#ffffff"/>
            <SolidColorBrush x:Key="OpenBorderBrush" Color="#54adc8"/>
        </Style.Resources>

        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="MinHeight" Value="10" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource NormalTextColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisableTextColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_EditableTextBox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentSite">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Uneditable"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ToggleButton x:Name="ToggleButton" Template="{StaticResource DefaultRoundedToggleButton}"
                            Grid.Column="2"
                            Focusable="false"
                            ClickMode="Press"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, 
                            RelativeSource={RelativeSource TemplatedParent}}"/>

                        <ContentPresenter x:Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left">
                        </ContentPresenter>

                        <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}"
                            Template="{StaticResource DefaultComboBoxTextBox}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Bottom"
                            Margin="3,3,23,3"
                            Focusable="True"
                            Background="Transparent"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}" />

                        <Popup x:Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True"
                            Focusable="true"
                            PopupAnimation="Slide">
                            <Grid x:Name="DropDown"
                                SnapsToDevicePixels="True"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" BorderThickness="1" BorderBrush="{StaticResource OpenBorderBrush}" Background="{StaticResource OpenFillBrush}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                            <Setter TargetName="DropDownBorder" Property="Background" Value="{StaticResource OpenFillBrush}"/>
                            <Setter TargetName="DropDownBorder" Property="BorderBrush" Value="{StaticResource OpenBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 다중선택 라운드 콤보 스타일 -->
    <Style x:Key="MultiSelectRoundedComboBox" TargetType="{x:Type ComboBox}">
        <Style.Resources>
            <Color x:Key="NormalTextColor">#3a4241</Color>
            <Color x:Key="DisableTextColor">#bcbcbc</Color>
            <Color x:Key="OpenTextColor">#3a4241</Color>

            <SolidColorBrush x:Key="OpenFillBrush" Color="#ffffff"/>
            <SolidColorBrush x:Key="OpenBorderBrush" Color="#54adc8"/>
        </Style.Resources>

        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="MinHeight" Value="10" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource NormalTextColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisableTextColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_EditableTextBox">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentSite">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Uneditable"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ToggleButton x:Name="ToggleButton" Template="{StaticResource DefaultRoundedToggleButton}"
                            Focusable="false"
                            ClickMode="Press"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, 
                            RelativeSource={RelativeSource TemplatedParent}}"/>

                        <ContentPresenter x:Name="ContentSite"
                            IsHitTestVisible="False"
                            Focusable="False"
                            Content="{TemplateBinding Text}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Stretch">
                        </ContentPresenter>

                        <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}"
                            Template="{StaticResource DefaultComboBoxTextBox}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Margin="3,3,23,3"
                            Focusable="True"
                            Background="Transparent"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}" />

                        <Popup x:Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True"
                            Focusable="true"
                            PopupAnimation="Slide">
                            <Grid x:Name="DropDown"
                                SnapsToDevicePixels="True"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" BorderThickness="1" BorderBrush="{StaticResource OpenBorderBrush}" Background="{StaticResource OpenFillBrush}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                            <Setter TargetName="DropDownBorder" Property="Background" Value="{StaticResource OpenFillBrush}"/>
                            <Setter TargetName="DropDownBorder" Property="BorderBrush" Value="{StaticResource OpenBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>